@page "/p/{who}"
@inject HttpClient Http
@inject NavigationManager NavManager

<!--p>Short Url: @shortUrl</p-->
<!--p>main site: @mainUrl2</p-->
<!--
@if(inList)
{
    <p>in list</p>
}
@if(!inList)
{
    <p>Not in list</p>
}
-->
@if (profile.Count == 0)
{
    @if (profiles != null)
    {
       <h1><p>Profiles Available</p></h1>
        @foreach (var pfile in profiles)
        {
            <a href="p/@pfile.User" class="btn btn-profile">@pfile.User</a>
        }
    }
}
else
@if (profile.Count > 0)
{
    <!--p>profile is not null</p>
    <p>profile count is: profile.Count</p-->
    <!--table-->
        @foreach (var pfile in profile)
        {
            <button class="btn-profile">@pfile.User</button>
            <button class="btn-profile">@pfile.Name</button>
            <a href="@pfile.Website" class="btn btn-profile">Main Website: @pfile.Website</a>
            <a href="https://Twitch.tv/@pfile.Twitch" class="btn btn-profile">Twitch.tv/@pfile.Twitch</a>
            <a href="https://Discord.gg/@pfile.Discord" class="btn btn-profile">Discord.gg/@pfile.Discord</a>
            <a href="https://Twitter.com/@pfile.Twitter" class="btn btn-profile">Twitter.com/@pfile.Twitter</a>
            /*@if(pfile.Website != "")
            {
                <button class="btn-profile">@pfile.User</button>
                <button class="btn-profile">@pfile.Name</button>
                <a href="@pfile.Website" class="btn btn-profile">Main Website: @pfile.Website</a>
                <a href="https://Twitch.tv/@pfile.Twitch" class="btn btn-profile">Twitch.tv/@pfile.Twitch</a>
                <a href="https://Discord.gg/@pfile.Discord" class="btn btn-profile">Discord.gg/@pfile.Discord</a>
                <a href="https://Twitter.com/@pfile.Twitter" class="btn btn-profile">Twitter.com/@pfile.Twitter</a>
                
            }*/
                        /*
            <tr>
                <td>User &emsp;</td>
                <td>Name &emsp;</td>
                @if (pfile.Website != "")
                {
                    <td>Main Website &emsp;</td>
                }
                @if (pfile.Twitch != "")
                {
                    <td>Twitch &emsp;</td>
                }
                @if (pfile.Discord != "")
                {
                    <td>Discord &emsp;</td>
                }
                @if (pfile.Twitter != "")
                {
                    <td>Twitter &emsp;</td>
                }

            </tr>
            <tr>
                <td>@pfile.User</td>
                <td>@pfile.Name</td>
                @if (pfile.Website != "")
                {
                    
                    <td>
                        <button class="glow-on-hover">
                            @pfile.Website
                        </button>
                    </td>
                }
                @if (pfile.Twitch != "")
                {
                    <td>@pfile.Twitch</td>
                }
                @if (pfile.Discord != "")
                {
                    <td>@pfile.Discord</td>
                }
                @if (pfile.Twitter != "")
                {
                    <td>@pfile.Twitter</td>
                }
            </tr>*/
        }
    <!--/table-->
}

@code 
{
    private List<Profile> profile = new List<Profile>();
    private Profiles[] profiles;

    [Parameter]
    public string who { get; set; }

    private bool inList = false;
    private bool memberFound = false;


    protected override async Task OnInitializedAsync()
    {
        //NavManager.TryGetQueryString<string>("u", out who);
        Console.Out.WriteLine("who is: " + who);
        if (who != string.Empty)
        {
            try
            {
                //make json for getting list of people to add then load each into a profile object
                profiles = await Http.GetFromJsonAsync<Profiles[]>("profiles/" + "FullDisplayProfiles" + ".json");
                try
                {
                    foreach(var pfile in profiles)
                    {
                        if(pfile.User == who)
                        {
                            profile = new List<Profile>(await Http.GetFromJsonAsync<List<Profile>>("profiles/" + who + ".json"));
                            inList = true;
                            memberFound = true;
                        }
                    }
                }
                catch(Exception notFound)
                {
                    Console.Out.WriteLine("not found after attempting to add to profile group");
                    Console.Out.WriteLine(notFound);
                }
            }
            catch (Exception notFound)
            {
                Console.Out.WriteLine("Not found when attempting to read from full diplay profiles");
                Console.Out.WriteLine(notFound);
            }
        }
    }
    public class Profiles
    {
        public string User { get; set; }
        public string ListOnPage { get; set;  }
    }
    public class Profile
    {
        public string User { get; set; }
        public string Name { get; set; }
        public string Website { get; set; }
        public string ListOnPage { get; set; }
        public string Twitch { get; set; }
        public string Discord { get; set; }
        public string Twitter { get; set; }

        //public Boolean ListOnPage { get; set; }
    }
}